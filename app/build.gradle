apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-platform-android'


android {
    compileSdkVersion 29
    buildToolsVersion '30.0.2'
//    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId 'org.diary'
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 8
        versionName "1.8"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.task.CustomTestRunner"
    }
    buildFeatures{
        viewBinding = true
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension = 'default'
            applicationIdSuffix = ".dev"
        }
        prod {
            dimension = 'default'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
    defaultConfig {
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-core.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/resources'
            test {
                resources.srcDirs += sharedTestDir
            }
            androidTest {
                resources.srcDirs += sharedTestDir
            }
        }
        dataBinding {
            enabled = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "androidx.annotation:annotation:$annotationVersion"

    /**-------------------testing libs------------------------------------------**/
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

    testImplementation "org.junit.platform:junit-platform-runner:$junitRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXJunitVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoIntentsVersion"
    androidTestImplementation ("androidx.test.espresso:espresso-core:$espressoCoreVersion",{
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    implementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    implementation "androidx.arch.core:core-testing:$coreTestingVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"

    //android support & recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorLayoutVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.cardview:cardview:$cardViewVersion"
    implementation "androidx.activity:activity:$activityVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"

    //Dagger
//    implementation "com.google.dagger:dagger:$daggerVersion"
//    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
//    implementation "com.google.dagger:dagger-android:$daggerVersion"
//    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
//    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
//    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    //Logging
//    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptorVersion"

    //picasso
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    //MultiDex
    implementation "androidx.multidex:multidex:$multiDexVersion"

    //Mockk
    testImplementation "io.mockk:mockk:$mockVersion"

    // (my) fragment
    def fragment_version = "1.3.0-alpha06"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // jetpack navigation
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    kapt "com.android.databinding:compiler:3.1.4"
}
